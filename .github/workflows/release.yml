name: Build & Release

on:
  push:
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-and-release-ios-ipa:
    permissions:
      contents: write
    runs-on: macos-latest
    steps:
      - name: checkout branch
        uses: actions/checkout@v4

      - name: setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: setup rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: install the CLI tool
        run: cargo install 'flutter_rust_bridge_codegen'

      - name: flutter pub get
        run: flutter pub get
        
      - name: setup code signing
        env:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
          MOBILEPROVISION_FILE_B64: ${{ secrets.MOBILEPROVISION_FILE_B64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PROFILE_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          echo -n "$CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$MOBILEPROVISION_FILE_B64" | base64 --decode --output $PROFILE_PATH
          
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          CERTIFICATE_ID=$(security find-identity -v -p codesigning $KEYCHAIN_PATH | grep -o '"[^"]*"' | head -1 | tr -d '"')
          echo "CERTIFICATE_ID=$CERTIFICATE_ID" >> $GITHUB_ENV
          
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: build and sign iOS app
        run: |
          flutter build ios --release --no-codesign
          
          security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" $RUNNER_TEMP/app-signing.keychain-db
          
          codesign --deep --force --options runtime -vvv --sign "$CERTIFICATE_ID" ./build/ios/iphoneos/Runner.app
          
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r Mangayomi-${{ github.ref_name }}-ios.ipa Payload

      - name: upload artifact ios ipa
        uses: actions/upload-artifact@v4
        with:
          name: Mangayomi-${{ github.ref_name }}-ios
          path: "build/ios/iphoneos/Mangayomi-*.ipa"

      - name: release package ios ipa
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/ios/iphoneos/Mangayomi-*.ipa"
          allowUpdates: true

  call-workflow-sideloading:
    needs: build-and-release-ios-ipa
    uses: ./.github/workflows/update_sideloading_source.yml